% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/datathief.R
\name{datathief}
\alias{datathief}
\title{datathief}
\usage{
datathief(
  png_address = system.file("extdata", "example_data2.png", package = "datathief"),
  type = "manual",
  unknown_points = 10,
  buffer_size = 0,
  layer_to_use = 1,
  solid_lines = FALSE,
  x_interval = "max"
)
}
\arguments{
\item{png_address}{file address of png file (screenshot of data). Currently this must be a png.}

\item{type}{type of process to run, either `auto` (all data in graph space pulled) or `manual` (only user-defined points are collected).}

\item{unknown_points}{*only used if `type = manual`. This is the initial number of unknown values to estimate. function will ask if you have more data to enter.}

\item{buffer_size}{For future use. buffer size around pixel clusters before creating a new data point.}

\item{layer_to_use}{layer of img to use for clustering. Adjusting this *may* help if clustering isn't working well.}

\item{solid_lines}{logical. should every data point be reported, or should 'clumps' be aggregated? Setting this to TRUE can be helpful if the image contains solid lines that you want data from. If TRUE, all data in the plot space is provided. Note that if FALSE, data can be lost if the centroid falls on empty graph space.}

\item{x_interval}{decimal places to round the x axis values to. if this is a numeric value, e.g., 3 (i.e., x interval is 0.001), it can help avoid having thousands of data points for a line. if all data is desired, set to 'max'.}
}
\value{
a dataframe
}
\description{
datathief
}
\examples{
datathief
\dontrun{
### manual mode works but can be labor intensive
out_man <- datathief(png_address =
    system.file('extdata', 'example_data2.png', package = 'datathief'),
    type = 'manual')
### using auto can be helpful if there's not debris on the plot
out_auto <- datathief(
    system.file('extdata', 'example_data2.png', package = 'datathief'),
    type = 'auto')
### we can do lines too, kind of.
### setting `x_interval = max` gives a full-resolution data dump.
out_line <- datathief(
    system.file('extdata', 'example_data3.png', package = 'datathief'),
    type = 'auto',  solid_lines = TRUE, x_interval = 'max')
plot(y ~ x, col = group, pch = 19, data = out_line, las = 1, cex = 0.2)

### using `x_interval = [positive integer]` aggregates the points somewhat
out_line <- datathief(
    system.file('extdata', 'example_data3.png', package = 'datathief'),
    type = 'auto',  solid_lines = TRUE, x_interval = 1)
plot(y ~ x, col = group, pch = 19, data = out_line, type = 'l')
}

}
